// ==UserScript==
// @name         IMEI –ó–∞—è–≤–∫–∏ - –ü–ª–∞–≤–∞—é—â–∏–π —Å—á—ë—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã—Ö
// @match        https://inmobiles.imei.kg/PersonalImportation*
// @match        https://inmobiles.imei.kg/PersonalImportation/Details/*
// @match        https://inmobiles.imei.kg/PersonalImportationRequestsAdditionalInfo/Details/*
// @grant        none
// ==/UserScript==

(function () {
  'use strict';

  const isMainPage = location.pathname === '/PersonalImportation';
  const allowedUrls = [
    '/PersonalImportation/Details/',
    '/PersonalImportationRequestsAdditionalInfo/Details/'
  ];

  const localKey = 'decisionCounterPosition';

  function isAllowedUrl() {
    return allowedUrls.some(path => window.location.pathname.startsWith(path));
  }

  function getCount(type) {
    return parseInt(localStorage.getItem(type) || '0', 10);
  }

  function setCount(type, val) {
    localStorage.setItem(type, val.toString());
  }

  function savePosition(left, top) {
    localStorage.setItem(localKey, JSON.stringify({ left, top }));
  }

  function loadPosition() {
    const pos = localStorage.getItem(localKey);
    if (pos) {
      try {
        return JSON.parse(pos);
      } catch (e) {}
    }
    return { top: 100, left: window.innerWidth - 250 };
  }

  function createCounterBox() {
    const { top, left } = loadPosition();

    const box = document.createElement('div');
    box.id = 'decision-counter';
    box.style.position = 'fixed';
    box.style.top = `${top}px`;
    box.style.left = `${left}px`;
    box.style.background = '#fff';
    box.style.border = '2px solid #444';
    box.style.padding = '10px 15px';
    box.style.zIndex = '9999';
    box.style.fontSize = '14px';
    box.style.borderRadius = '10px';
    box.style.boxShadow = '0 0 10px rgba(0,0,0,0.2)';
    box.style.color = '#000';
    box.style.fontFamily = 'Arial, sans-serif';
    box.style.cursor = 'move';
    box.style.userSelect = 'none';
    box.innerHTML = getCounterHTML();
    document.body.appendChild(box);

    makeDraggable(box);
    setupButtonEvents(box);
  }

  function getCounterHTML() {
    const approved = getCount('approvedCount');
    const rejected = getCount('rejectedCount');
    return `
      <b>–ó–∞—è–≤–∫–∏:</b><br>
      <div style="display:flex; align-items:center; margin-bottom:4px;">
        ‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ:
        <span id="approved-count" style="margin-left:6px; font-weight: normal; min-width:30px; text-align:right;">${approved}</span>
        <button id="approved-decrease" style="margin-left: 20px; background:#dc3545;color:#fff;border:none;width:22px;height:22px;border-radius:4px;">‚àí</button>
      </div>
      <div style="display:flex; align-items:center; margin-bottom:4px;">
        ‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ:
        <span id="rejected-count" style="margin-left:6px; font-weight: normal; min-width:30px; text-align:right;">${rejected}</span>
        <button id="rejected-decrease" style="margin-left: 20px; background:#dc3545;color:#fff;border:none;width:22px;height:22px;border-radius:4px;">‚àí</button>
      </div>
      üìä –í—Å–µ–≥–æ: ${approved + rejected}<br><br>
      <button id="reset-counter" style="margin-top:5px;padding:6px 12px;">–°–±—Ä–æ—Å</button>
    `;
  }

  function updateCounterUI() {
    const box = document.getElementById('decision-counter');
    if (!box) return;
    box.innerHTML = getCounterHTML();
    setupButtonEvents(box);
  }

  function setupButtonEvents(box) {
    box.querySelector('#approved-decrease').addEventListener('click', () => {
      let val = getCount('approvedCount');
      if (val > 0) setCount('approvedCount', val - 1);
      updateCounterUI();
    });

    box.querySelector('#rejected-decrease').addEventListener('click', () => {
      let val = getCount('rejectedCount');
      if (val > 0) setCount('rejectedCount', val - 1);
      updateCounterUI();
    });

    box.querySelector('#reset-counter').addEventListener('click', () => {
      setCount('approvedCount', 0);
      setCount('rejectedCount', 0);
      updateCounterUI();
    });
  }

  function makeDraggable(elem) {
    let isDragging = false;
    let offsetX, offsetY;

    elem.addEventListener('mousedown', (e) => {
      isDragging = true;
      offsetX = e.clientX - elem.getBoundingClientRect().left;
      offsetY = e.clientY - elem.getBoundingClientRect().top;
      e.preventDefault();
    });

    document.addEventListener('mousemove', (e) => {
      if (isDragging) {
        const left = e.clientX - offsetX;
        const top = e.clientY - offsetY;
        elem.style.left = `${left}px`;
        elem.style.top = `${top}px`;
        savePosition(left, top);
      }
    });

    document.addEventListener('mouseup', () => {
      isDragging = false;
    });
  }

  function incrementCounter(type) {
    const current = getCount(type);
    setCount(type, current + 1);
    updateCounterUI();
  }

  function setupConfirmListener() {
    document.addEventListener('click', function (e) {
      if (!isAllowedUrl()) return;

      const target = e.target;
      const text = target.textContent.trim().toLowerCase();

      if (text === 'confirm' || text === 'approve') {
        const parentModal = target.closest('.modal, .bootbox, .swal2-popup');
        if (parentModal) {
          const modalText = parentModal.innerText.toLowerCase();
          if (modalText.includes('reject')) {
            incrementCounter('rejectedCount');
          } else if (modalText.includes('approve')) {
            incrementCounter('approvedCount');
          }
        }
      }
    });
  }

  if (isMainPage) {
    createCounterBox();
  }

  setupConfirmListener();
})();
