// ==UserScript==
// @name         check IMEI, ИНН и ID Number (v1.0)
// @namespace    imei.kg-checker-enhanced
// @version      1.0
// @description  imei.kg
// @match        https://inmobiles.imei.kg/PersonalImportation/Details/*
// @grant        none
// ==/UserScript==
(function () {
  'use strict';

  function getField(labelText) {
    const allDivs = Array.from(document.querySelectorAll('div.td'));
    for (let i = 0; i < allDivs.length - 1; i++) {
      if (allDivs[i].innerText.trim() === labelText) {
        return {
          value: allDivs[i + 1].innerText.trim()
        };
      }
    }
    return null;
  }

  function getDigits(text) {
    return text.replace(/[^\d]/g, '');
  }

  function createBlock(text, color) {
    const span = document.createElement('span');
    span.style.color = color;
    span.style.whiteSpace = 'nowrap';
    span.style.padding = '0 8px';
    span.style.fontWeight = 'bold';
    span.textContent = text;
    return span;
  }

  function checkINN() {
    const input = document.querySelector('input.txtpersNum');
    if (!input) return null;

    const digits = getDigits(input.value);
    const valid = digits.length === 14;
    return createBlock(`ИНН: ${digits.length} цифр`, valid ? 'green' : 'red');
  }

  function checkIDNumber() {
    const input = document.querySelector('input.txtidNum');
    if (!input) return null;

    const digits = getDigits(input.value);
    const valid = digits.length === 7;
    return createBlock(`ID: ${digits.length} цифр`, valid ? 'green' : 'red');
  }

  function checkIMEI() {
    const imei1 = getField('IMEI1')?.value || '';
    const imei2 = getField('IMEI2')?.value || '';

    const d1 = getDigits(imei1);
    const d2 = getDigits(imei2);

    let text = '';
    let color = 'black';

    if (d1.length === 15 && d2.length === 15) {
      text = `IMEI: 15 цифр`;
      const tac1 = d1.slice(0, 8);
      const tac2 = d2.slice(0, 8);
      const serial1 = d1.slice(8, 14);
      const serial2 = d2.slice(8, 14);

      const tacMatch = tac1 === tac2;
      const serialMatch = serial1 === serial2;

      if (tacMatch && serialMatch) {
        color = 'green';
      } else if (tacMatch) {
        text += ', Совпадает TAC';
        color = 'green';
      } else if (serialMatch) {
        text += ', Совпадает серийный номер';
        color = 'green';
      } else {
        text += ', Не совпадают TAC и серийный номер';
        color = 'red';
      }
    } else {
      if (d1.length !== 15) text += `IMEI1: ${d1.length} цифр `;
      if (d2.length !== 15) text += `IMEI2: ${d2.length} цифр`;
      color = 'red';
    }

    return createBlock(text.trim(), color);
  }

  function setupOutputContainer() {
    const container = document.querySelector('.kt-portlet__head-label');
    if (!container) return null;

    const header = container.querySelector('h3.kt-portlet__head-title');
    if (!header) return null;

    const wrapper = document.createElement('div');
    wrapper.style.display = 'flex';
    wrapper.style.alignItems = 'center';
    wrapper.style.gap = '120px';

    header.style.margin = '0';

    const outputDiv = document.createElement('div');
    outputDiv.className = 'custom-check-output';
    outputDiv.style.display = 'flex';
    outputDiv.style.gap = '12px';
    outputDiv.style.fontSize = '14px';
    outputDiv.style.whiteSpace = 'nowrap';

    container.innerHTML = '';
    wrapper.appendChild(header);
    wrapper.appendChild(outputDiv);
    container.appendChild(wrapper);

    return outputDiv;
  }

  window.addEventListener('load', () => {
    const outputContainer = setupOutputContainer();
    if (!outputContainer) return;

    outputContainer.innerHTML = '';

    const inn = checkINN();
    const id = checkIDNumber();
    const imei = checkIMEI();

    if (inn) outputContainer.appendChild(inn);
    if (id) outputContainer.appendChild(id);
    if (imei) outputContainer.appendChild(imei);
  });

})();
